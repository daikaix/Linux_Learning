==1. Java Web世界
    Servlet: 动态生成HTML代码 -> SpringMVC
    Tomcat: Java的服务程序
    Jenkins: 持续集成工具，Servlet提供的一个Java应用程序

    Tomcat与Apache的区别：
    Apache是web服务器（静态解析，如HTML），tomcat是java应用服务器（动态解析，如JSP）
    Apache是一款Web服务器软件，有多种产品，可以支持SSL技术，支持多个虚拟主机。
    Tomcat只是一个servlet(jsp也翻译成servlet)容器，可以认为是apache的扩展，但是可以独立于apache运行
    1）Apache是普通服务器，本身只支持html即普通网页，可以通过插件支持php，还可以与Tomcat连通
      (Apache单向连接Tomcat，就是说通过Apache可以访问Tomcat资源，反之不然)
    2）Apache只支持静态网页，但像Jsp动态网页就需要Tomcat来处理。
    3）Apache和Tomcat整合使用，如果客户端请求的是静态页面，则只需要Apache服务器响应请求；
    4）Apache和Tomcat是独立的，在同一台服务器上可以集成。

==2. 配置Java环境并安装Tomcat
    安装：
        yum search java | grep openjdk  => java 1.8.0
        查看需要安装的Java版本,devel版本
        yum install tomcat => systemctl start tomcat, enable
        开放防火墙 firewall-cmd --zone=public --add-port=8080/tcp --permanent

    配置文件查看： rpm -ql tomcat
        ls -dl /usr/share/tomcat/webapps -> /var/lib/tomcat/webapps
        服务器配置：/etc/tomcat/server.xml
        主配置：/etc/tomcat/tomcat.conf

    插件安装：
        tomcat-webapps
        tomcat-admin-webapps
        tomcat-docs-webapp
        tomcat-javadoc

    创建Tomcat用户：
        /etc/tomcat/tomcat-users.xml
        增加一个admin用户即可，123456， roles
        Manager APP:可以查看到所有的webapps目录下的项目
        Host Manager: 可以配置虚拟主机

    Tomcat的Coyote Web服务器：只支持HTTP，处理静态文件效率低，
        解决方案：使用Nginx或者Apache

==3. 安装Jenkins
    war包：web archieve
    下载war包：wget https://mirrors.jenkins.io/war-stable/latest/jenkins.war
            scp jenkins.war root@192.168.1.9:/root

    war包放置到webapps文件夹中,并且添加安全上下文
            mv jenkins.war /var/lib/tomcat/webapps
            安全上下文：tomcat_var_lib_t -> restorecon -Rv .
            还是不行： setenforce 0

    登录配置：
        密码位置：/usr/share/tomcat/.jenkins/secrets/initialAdminPassword
        自己设置文件夹：
            mkdir /var/lib/jenkins
            chown tomcat:tomcat /var/lib/jenkins
            vim /etc/tomcat/context.xml: 配置环境变量
            vim /etc/tomcat/context.xml
            <Environment name="JENKINS_HOME" value="/var/lib/jenkins" type="java.lang.String"/>

    运行：
        直接运行：java -jar jenkins.war
        端口运行：java -jar jenkins.war --httpPort=8081
        在Tomcat容器中运行

    插件安装：
        http访问：vim /usr/share/tomcat/.jenkins/hudson.model.UpdateCenter.xml
        Install Suggested-Plugins
        插件位置：jenkins/WEB-INF/detached-plugins
    创建第一个admin用户：
        使用Jenkins

==4. Nginx安装
    代理：Proxy, 反向代理，正向代理,负载均衡
    安装：
        yum install epel-release  EPEL源，额外的软件包
        yum install nginx
    启动：
        systemctl start nginx ( 首先需要关闭 apache,httpd )
        systemctl enable nginx

    配置文件：rpm -ql nginx
        主配置文件：/etc/nginx/nginx.conf
        首页信息：/usr/share/nginx/html/index.html

    配置nginx:
    1. 先配置Apache监听其他端口
        http 80 https 443 apache[ http 7080 https 7443 ]
        先配置apache 监听其他端口 vim /etc/httpd/conf/httpd.conf
                              vim /etc/httpd/conf.d/ssl.conf
            SELinux添加端口： semanage port -a -t http_port_t -p tcp 7080
            firewall添加端口： firewall-cmd --zone=public --add-port=7080/tcp --permanent
    2. 反向代理
        vim /etc/nginx/nginx.conf
        nginx.conf:
            work_processes: 进程数
            events: 每个进程的最大连接数，worker_connections
            error_log: 错误日志
            include: 包含的其他配置文件
            http
                logformat 日志格式main $remote_addr$remote_user

                添加区块：
                    upstream backend_jenkins {
                        server 127.0.0.1:8080;
                    }

                    upstream backend_apache {
                        server 127.0.0.1:7080;
                    }

                server: 设置虚拟主机
                    listen 监听端口
                    server_name 域名 www.linuxcoreapp.com linuxcoreapp.com
                    root 对应默认静态文件查找位置，可以放在Tomcat对应的文件位置
                    location 位置
                        location / {
                            proxy_pass http://backend_apache;
                            #proxy_pass 代理转接
                            #
                        }
                        location = /jenkins {
                                proxy_pass http://backend_jenkins;
                        }

                        // 增加配置静态文件请求地址，否则nginx自动访问/usr/share/nginx/html/
                        location ~ .* {
                            proxy_pass     http://backend_jenkins;
                            proxy_set_header Host $http_host;
                            proxy_set_header X-Real-IP $remote_addr;
                            proxy_set_header X-Fonwarded-For $proxy_add_x_forwarded_for;
                        }
                    error_page

        修改：/etc/hosts -> 对应数据为192.168.1.9 www.linuxcoreapp.com

        支持HTTPS：
            将server注释去除
            将ssl的公钥和证书存放在指定目录下
            ssl_certificate "/etc/pki/nginx/server.crt";
            ssl_certificate_key "/etc/pki/nginx/private/server.key";
            /etc/pki/tls/private/server.key
            /etc/pki/tls/certs/server.crt

            server中：
            # redirect HTTP requests to HTTPS
            return 301 https://$host$request_uri;
