== 1. 文本编辑
高级文本编辑器vim [ vi improved ]
    安装启动vim, yum -y install vim

    vimtutor: Vim的教程程序

    交互模式，默认模式
        删除(剪切)：
            x删除
            dd 删除一整行
            dw 删除一个单词，从光标处开始，到另一个单词开头

            d0 删除至行首
            d$ 删除至行末，从光标开始

            d motion[w,e,$,0] e标识到单词末尾
            d number motion  制定删除数量

        复制:
            yy: 复制一行
            y$ y0
            yw

        黏贴：删除的结果存放在寄存器中
            p 黏贴寄存器中的内容
            7p 黏贴的次数

        替换：
            r 替换光标所在位置字符
            R 进入替换模式，一次性替换多个字符
            ce,cw 将当前单词删除，然后输入自己的字符，ESC退出
            c number e,w

        撤销与重做：
            u 撤销上一次的操作  4u
            U 撤销一整行的操作  5U
            Ctrl+r 重做

        移动：
            0 行首，3e 三个单词的末尾，2w 两个单词的开头
            hjkl,上下左右

            g:go
                7G 则直接跳转到文件中的第7行
                G 最后一行
                gg 第一行
                ctrl+g 显示当前编辑文件中当前光标所在行位置以及文件状态信息

        模式
            i 插入模式，I 行首插入， a 光标下一个字符插入，A 行尾插入
            : 命令模式
            v 可视模式

    插入模式
        输入即可
        ESC 退出插入模式

    命令模式：
        q! 强制退出
        wq 写入文件并退出
        set nu 显示行号，set nonu 隐藏行号

== 2. vim高级操作
    查找：
        /xxx 向文件结尾进行搜索
        ?xxx 向文件开头搜索
            n向下翻搜索结果
            N向上翻搜索结果

            ctrl+i, 前进
            ctrl+o, 后退

        (,{,[的匹配查找，%

    查找替换：
        :s/old/new 只修改第一个匹配的字符串
        :s/old/new/g  将old转换为new,/g表示全局匹配
        :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中首尾两行的行号
        :%s/old/new/g     则是替换整个文件中的每个匹配串
        :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换

    合并文件：
        :r 文件名， :r TEST

    分屏：
        :sp 另一个文件名 横向分屏，默认为本文件
        :vsp 垂直分屏

        Ctrl+w Ctrl+w : 视图跳转
        Ctrl+w [h,j,k,l] : 上下左右跳转
        Ctrl+w +,-,= : 扩大，缩小视图, 重新分配
        Ctrl+w Ctrl+r: 调换位置

        Ctrl+w q,c : 关闭viewport
        Ctrl+w o : 只保留当前的视口
        :quit,:close 也可以
        :only  只留下当前的视图

    执行外部命令：
        :! ls 执行ls命令