== 1. 文本编辑
高级文本编辑器vim [ vi improved ]
    安装启动vim, yum -y install vim

    vimtutor: Vim的教程程序

    交互模式，默认模式
        删除(剪切)：
            x删除
            dd 删除一整行
            dw 删除一个单词，从光标处开始，到另一个单词开头

            d0 删除至行首
            d$ 删除至行末，从光标开始

            d motion[w,e,$,0] e标识到单词末尾
            d number motion  制定删除数量

        复制:
            yy: 复制一行
            y$ y0
            yw

        黏贴：删除的结果存放在寄存器中
            p 黏贴寄存器中的内容
            7p 黏贴的次数

        替换：
            r 替换光标所在位置字符
            R 进入替换模式，一次性替换多个字符
            ce,cw 将当前单词删除，然后输入自己的字符，ESC退出
            c number e,w

        撤销与重做：
            u 撤销上一次的操作  4u
            U 撤销一整行的操作  5U
            Ctrl+r 重做

        移动：
            0 行首，3e 三个单词的末尾，2w 两个单词的开头
            hjkl,上下左右

            g:go
                7G 则直接跳转到文件中的第7行
                G 最后一行
                gg 第一行
                ctrl+g 显示当前编辑文件中当前光标所在行位置以及文件状态信息

        模式
            i 插入模式，I 行首插入， a 光标下一个字符插入，A 行尾插入 ,
            s 删除所在的字符并进入插入模式， S 删除所在的行并进入插入模式
            : 命令模式
            v 可视模式

    插入模式
        输入即可
        ESC 退出插入模式

    命令模式：
        q! 强制退出
        wq 写入文件并退出
        set nu 显示行号，set nonu 隐藏行号

== 2. vim高级操作
    查找：
        /xxx 向文件结尾进行搜索
        ?xxx 向文件开头搜索
            n向下翻搜索结果
            N向上翻搜索结果

            ctrl+i, 前进
            ctrl+o, 后退

        (,{,[的匹配查找，%

    查找替换：
        :s/old/new 只修改第一个匹配的字符串
        :s/old/new/g  将old转换为new,/g表示全局匹配
        :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中首尾两行的行号
        :%s/old/new/g     则是替换整个文件中的每个匹配串
        :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换

    合并文件：
        :r 文件名， :r TEST

    分屏：
        :sp 另一个文件名 横向分屏，默认为本文件
        :vsp 垂直分屏

        Ctrl+w Ctrl+w : 视图跳转
        Ctrl+w [h,j,k,l] : 上下左右跳转
        Ctrl+w +,-,= : 扩大，缩小视图, 重新分配
        Ctrl+w Ctrl+r: 调换位置

        Ctrl+w q,c : 关闭viewport
        Ctrl+w o : 只保留当前的视口
        :quit,:close 也可以
        :only  只留下当前的视图

    执行外部命令：
        :! ls 执行ls命令

== 3. vim配置以及可视模式
    可视模式：
        v: 字符可视模式, 配合d实现delete操作
        V: 行可视模式, 选中一行
        Ctrl+V: 块可视模式, 大写I，输入数据，两次Esc即可
        u: 文本转化为小写
        U: 文本转化为大写

    vim配置：
        配置文件 .vimrc
        cp /etc/vimrc ~/.vimrc
        vim .vimrc ->

        配置语法高亮：syntax
        显示行号：set number
        显示命令: set showcmd
        忽略大小写: set ignorecase
        设置鼠标: set mouse=a, 类似于可视模式，

        以命令模式激活选项参数： set nu , set nonu

    [ 大佬的配置：https://github.com/amix/vimrc ]
    [ https://blog.csdn.net/liangsir_l/article/details/50608350 ]

== 4.vim配置
    set nocompatible
    set number
    filetype on
    set history=1000
    color evening
    syntax on
    set autoindent
    set smartindent
    set tabstop=4
    set shiftwidth=4
    set showmatch
    set guioptions-=T
    set vb t_vb=
    set ruler
    set nohls
    set incsearch
    if has("vms")
    set nobackup
    else
    set backup
    endif

== 5. 管理服务器和服务 [ 为Shell编程准备 ]
    守护进程：daemon
        父进程进程号为1，运行在后台，不会关闭。
        systemd,httpd,smbd

    systemd 管理系统服务，并行执行
    unit 泛指不同的单元，包括服务service, 挂载，外设等，守护进程属于service

        systemctl命令：
            systemctl start|stop|restart|status|reload xxx
            启动服务，关闭服务，重启服务，查看服务状态，重载服务

            enable|disable|is-enable
            开启自动启动，开机不自动启动，是否自启动

            systemctl list-unit-files --type=service
            查看服务的启动和禁用情况
            systemctl list-units
            列出所有的活动单元

            systemctl cat smb.service
            对服务进行查看
            systemctl edit smb.service
            对服务进行编辑  ( --full 直接编辑 )

        使用target,System V的运行级别的演进
            poweroff.target 0 关机
            rescue.target 1   单用户
                       2,3,4  多用户
                          5   图形界面
                          6   重启
            获取图形界面对应target
            systemctl list-dependencies graphical.target

            获取默认target,更改默认的级别
            systemctl get-default
            systemctl set-default graphical.target
            更改运行级别
            systemctl isolate rescue.target

        使用journalctl命令管理日志
            按时间顺序显示有systemd管理的所有日志
            journalctl
            journalctl -u smb.service   只显示服务的日志
            journalctl -b -k 显示自上一次以来的日志，查看kernal,

        使用systemd-analyze查看启动耗时
            systemd-analyze
            systemd-analyze blame 查看所有unit的耗时
            (慎用 systemctl mask xxx.service, 会屏蔽所有启动的操作)

    [ https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html ]

== 6. Apache 安装
    安装启动： yum -y install httpd， systemctl start httpd
             systemctl enable httpd

    外网访问：192.168.1.9:80
            首先需要关闭防火墙，firewall-cmd --list-ports
            1. 关闭防火墙 systemctl stop firewalld
            2. 开放80端口 firewall-cmd --zone=public --add-port=80/tcp --permanent
                    firewall-cmd --reload
                    firewall-cmd --zone=public --query-port=80/tcp
                    firewall-cmd --zone=public --remove-port=80/tcp --permanent

    配置文件：服务目录，/etc/httpd, 主配置文件，/etc/httpd/conf/httpd.conf
            访问日志，/var/log/httpd/access_log | error_log

            ServerRoot 服务目录
            Listen 监听的IP地址和端口号
            User 运行服务的用户
            Group 运行服务的群组
            DocumentRoot 网站文件
            ...

    自定义网站：echo "Welcome to Imooc" > /var/www/html/index.html
    自定义网站目录：
        mkdir /home/web
        echo "New Web Directory" > /home/web/index.html
        vim /etc/httpd/conf/httpd.conf
        [ 配置后无法获取index.html -> SELinux子系统阻止访问 ]

==7. SELinux 安全子系统
    Security Enhanced Linux 安全增强型Linux
    MAC Mandatory Access Control 强制访问控制，操作系统约束的访问控制
        域限制，服务程序的功能限制
        安全上下文，文件资源的访问限制

    注意：防火墙是放置外界对本机的端口的访问

    配置模式：enforcing:强制启用安全策略模式
            permissive: 越权访问
            disable: 越权不拦截也不警告

    sestatus -v 查看se的状态
    vim /etc/selinux/config  更改全局配置
    getenforce 获取强制信息
    setenforce 0 设置强制失效 setenforce 1 设置强制有效

    管理SELinux -> semanage命令：
        安装 -> yum provides semanage 查看什么包提供该命令
                yum -y install policycoreutils-python

        为新目录添加安全上下文：
            semanage fcontext -a -t httpd_sys_content_t /home/web , /home/web/*
            restorecon -Rv /home/web
            -a：增加
            -t: 安全性本文资料
            fcontext：主要用在安全上下文方面。

        查看安全上下文：
            ls -Zd /home/web

==8. DHCP动态分配IP，静态分配IP
    编辑config文件：
        vim /etc/sysconfig/network-scripts/ifcfg-enp0s3
        配置信息：
            BOOTPROTO: dhcp 根据网络自动分配，static 静态方式
            TYPE: 设备类型 Ethernet
            NAME 网卡名称
            ONBOOT: yes 网卡自动启动

            静态方式
            IPADDR: 192.168.1.9 IP地址
            NETMASK=255.255.255.0
            配置GateWay: 网关，一个端口到另一个端口的门户
                192.168.1.1 网络高级，路由器就是
            配置DNS Server: 域名服务器
                scutil --dns，cat /etc/resolv.conf查看

            多了一个：GATEWAY,DNS1

    DHCP：Dynamic Host Configuration Protocol 动态主机配置协议
        主要用于局域网环境，或者存在很多办公设备的局域网环境，为了自动分配IP地址等参数

    nmtui: 控制NetWork Manager
        选择编辑连接，选中enp0s3,进入编辑状态
        设置成自动和手动

        systemctl restart network 重启以生效

==9. Apache的虚拟主机功能
    服务器分类：
        独立服务器，仅提供给用户一个人使用，对硬件有完全的控制权，大中型网站
        虚拟主机，virtual host，在服务器中划分一定的磁盘空间，只提供基础的网站访问和数据存储
            一套房，n个房间，资源共享
        虚拟专用主机，virtual Private Server, 需要具有一定的维护系统的能力
            一套房，n个公寓，但是房间内部资源独立
        ECS, Elastic Compute Service, 云服务器, 保存主机的镜像，安全性稳定性更高
            一栋大楼，需要多大空间，就给多少空间

    虚拟主机：
        基于用户请求的IP地址，主机域名或端口号,提供多个网站同时为外部提供访问服务的技术
        用户请求的资源不同，获取的网页内容也不相同

    基于IP地址配置：
        nmtui -> enp0s3 -> 添加两个新的IP地址 192.168.1.11/24 , 192.168.1.20/24
        IPADDR,PREFIX=24 , IPADDR1,PREFIX1
        注意：有时候IPping不通可能是这个IP被占用了，换一个即可

        创建/home/web/11  /22  /index.html -> 192.168.1.11 | 20

        修改 /etc/httpd/conf/httpd.conf, 配置<Virtual Host>
        <VirtualHost 192.168.1.11>
                 DocumentRoot /home/web/11
                 ServerName www.linuxcoreapp.com
                 <Directory /home/web/11>
                         AllowOverride None
                         Require all granted
                 </Directory>
        </VirtualHost>

        <VirtualHost 192.168.1.20>
                 DocumentRoot /home/web/20
                 ServerName bbs.linuxcoreapp.com
                 <Directory /home/web/20>
                         AllowOverride None
                         Require all granted
                 </Directory>
        </VirtualHost>

        重启配置：systemctl restart httpd

        结果： 不同的IP地址进行访问，对应不同的显示结果，这就是一个虚拟的主机

    基于主机域名:
        /etc/hosts 修改DNS服务,注意是访问的本机进行修改
            192.168.1.11 www.linuxcoreapp.com bbs.linuxcoreapp.com

        mkdir /home/web/www
        mkdir /home/web/bbs
        echo "www.com" > /home/web/www/index.html
        echo "bbs.com" > /home/web/bbs/index.html
        <VirtualHost 192.168.1.11>
                 DocumentRoot /home/web/www
                 ServerName www.linuxcoreapp.com
                 <Directory /home/web/www>
                         AllowOverride None
                         Require all granted
                 </Directory>
        </VirtualHost>

        <VirtualHost 192.168.1.11>
                 DocumentRoot /home/web/bbs
                 ServerName bbs.linuxcoreapp.com
                 <Directory /home/web/bbs>
                         AllowOverride None
                         Require all granted
                 </Directory>
        </VirtualHost>

        结果： 不同的域名相同的IP地址进行访问，对应不同的显示结果

==10. HTTPS加密网页数据
    网站存放在: /home/web/index.html
    HTTPS协议: HTTP over SSL/TLS，超文本安全传输协议
              默认端口是443
              SSL 是 Security Socket Layer, 安全的套接字层，对网络连接进行加密，使用非对称加密的方式
              TLS 看作是SSL的新版本

    CA: Certification Authorization 证书权威
        为客户端确认所连接的网站的服务器提供的证书是否合法
        数字证书就是经过CA认证的公钥，内容不止包含公钥

    为Apache服务器配置HTTPS:
        1. 防火墙开启443端口
           firewall-cmd --zone=public --add-port=443/tcp --permanent
           firewall-cmd --reload
           firewall-cmd --zone=public --list-ports
           firewall-cmd --zone=public --remove-port=443/tcp --permanent
        2. 安装Apache的SSL支持模块
           yum -y install mod_ssl
           systemctl restart httpd
           ls /etc/httpd/conf.d/ssl.conf
        3. 私钥位置 /etc/pki/tls/private/localhost.key
           证书位置 /etc/pki/tls/certs/localhost.crt
               所有与数字证书相关的概念和技术，统称为pki
               安全传输协议TLS
        4. 使用https协议重新访问，获取到证书localhost.localdomain
        5. 自制证书，自签名证书：
           使用OpenSSL生成证书：
            1. 生成私钥
            mkdir /etc/httpd/pki  -> openssl genrsa -out server.key 2048
            指定私钥的位数为2048位
            私钥： server.key

            2. 指定私钥获取对应的csr文件, 证书签名请求
            openssl req -new -key server.key -out server.csr
            CountryName CN, 等信息

            3. 生成自签名证书crt
            openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt

        6. 复制自制私钥到指定位置,并修改配置文件
            cp server.key /etc/pki/tls/private/
            cp server.crt /etc/pki/tls/certs/

            vim /etc/httpd/conf.d/ssl.conf 更改SSLCertificateFile,KeyFile
            systemctl restart httpd
    注意：现在如果证书不经过CA认证，浏览器是无法访问的