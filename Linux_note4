== 1. 文本编辑
高级文本编辑器vim [ vi improved ]
    安装启动vim, yum -y install vim

    vimtutor: Vim的教程程序

    交互模式，默认模式
        删除(剪切)：
            x删除
            dd 删除一整行
            dw 删除一个单词，从光标处开始，到另一个单词开头

            d0 删除至行首
            d$ 删除至行末，从光标开始

            d motion[w,e,$,0] e标识到单词末尾
            d number motion  制定删除数量

        复制:
            yy: 复制一行
            y$ y0
            yw

        黏贴：删除的结果存放在寄存器中
            p 黏贴寄存器中的内容
            7p 黏贴的次数

        替换：
            r 替换光标所在位置字符
            R 进入替换模式，一次性替换多个字符
            ce,cw 将当前单词删除，然后输入自己的字符，ESC退出
            c number e,w

        撤销与重做：
            u 撤销上一次的操作  4u
            U 撤销一整行的操作  5U
            Ctrl+r 重做

        移动：
            0 行首，3e 三个单词的末尾，2w 两个单词的开头
            hjkl,上下左右

            g:go
                7G 则直接跳转到文件中的第7行
                G 最后一行
                gg 第一行
                ctrl+g 显示当前编辑文件中当前光标所在行位置以及文件状态信息

        模式
            i 插入模式，I 行首插入， a 光标下一个字符插入，A 行尾插入 ,
            s 删除所在的字符并进入插入模式， S 删除所在的行并进入插入模式
            : 命令模式
            v 可视模式

    插入模式
        输入即可
        ESC 退出插入模式

    命令模式：
        q! 强制退出
        wq 写入文件并退出
        set nu 显示行号，set nonu 隐藏行号

== 2. vim高级操作
    查找：
        /xxx 向文件结尾进行搜索
        ?xxx 向文件开头搜索
            n向下翻搜索结果
            N向上翻搜索结果

            ctrl+i, 前进
            ctrl+o, 后退

        (,{,[的匹配查找，%

    查找替换：
        :s/old/new 只修改第一个匹配的字符串
        :s/old/new/g  将old转换为new,/g表示全局匹配
        :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中首尾两行的行号
        :%s/old/new/g     则是替换整个文件中的每个匹配串
        :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换

    合并文件：
        :r 文件名， :r TEST

    分屏：
        :sp 另一个文件名 横向分屏，默认为本文件
        :vsp 垂直分屏

        Ctrl+w Ctrl+w : 视图跳转
        Ctrl+w [h,j,k,l] : 上下左右跳转
        Ctrl+w +,-,= : 扩大，缩小视图, 重新分配
        Ctrl+w Ctrl+r: 调换位置

        Ctrl+w q,c : 关闭viewport
        Ctrl+w o : 只保留当前的视口
        :quit,:close 也可以
        :only  只留下当前的视图

    执行外部命令：
        :! ls 执行ls命令

== 3. vim配置以及可视模式
    可视模式：
        v: 字符可视模式, 配合d实现delete操作
        V: 行可视模式, 选中一行
        Ctrl+V: 块可视模式, 大写I，输入数据，两次Esc即可
        u: 文本转化为小写
        U: 文本转化为大写

    vim配置：
        配置文件 .vimrc
        cp /etc/vimrc ~/.vimrc
        vim .vimrc ->

        配置语法高亮：syntax
        显示行号：set number
        显示命令: set showcmd
        忽略大小写: set ignorecase
        设置鼠标: set mouse=a, 类似于可视模式，

        以命令模式激活选项参数： set nu , set nonu

    [ 大佬的配置：https://github.com/amix/vimrc ]
    [ https://blog.csdn.net/liangsir_l/article/details/50608350 ]

== 4.vim配置
    set nocompatible
    set number
    filetype on
    set history=1000
    color evening
    syntax on
    set autoindent
    set smartindent
    set tabstop=4
    set shiftwidth=4
    set showmatch
    set guioptions-=T
    set vb t_vb=
    set ruler
    set nohls
    set incsearch
    if has("vms")
    set nobackup
    else
    set backup
    endif

== 5. 管理服务器和服务 [ 为Shell编程准备 ]
    守护进程：daemon
        父进程进程号为1，运行在后台，不会关闭。
        systemd,httpd,smbd

    systemd 管理系统服务，并行执行
    unit 泛指不同的单元，包括服务service, 挂载，外设等，守护进程属于service

        systemctl命令：
            systemctl start|stop|restart|status|reload xxx
            启动服务，关闭服务，重启服务，查看服务状态，重载服务

            enable|disable|is-enable
            开启自动启动，开机不自动启动，是否自启动

            systemctl list-unit-files --type=service
            查看服务的启动和禁用情况
            systemctl list-units
            列出所有的活动单元

            systemctl cat smb.service
            对服务进行查看
            systemctl edit smb.service
            对服务进行编辑  ( --full 直接编辑 )

        使用target,System V的运行级别的演进
            poweroff.target 0 关机
            rescue.target 1   单用户
                       2,3,4  多用户
                          5   图形界面
                          6   重启
            获取图形界面对应target
            systemctl list-dependencies graphical.target

            获取默认target,更改默认的级别
            systemctl get-default
            systemctl set-default graphical.target
            更改运行级别
            systemctl isolate rescue.target

        使用journalctl命令管理日志
            按时间顺序显示有systemd管理的所有日志
            journalctl
            journalctl -u smb.service   只显示服务的日志
            journalctl -b -k 显示自上一次以来的日志，查看kernal,

        使用systemd-analyze查看启动耗时
            systemd-analyze
            systemd-analyze blame 查看所有unit的耗时
            (慎用 systemctl mask xxx.service, 会屏蔽所有启动的操作)

    [ https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html ]

== 6. Apache 安装
    安装启动： yum -y install httpd， systemctl start httpd
             systemctl enable httpd

    外网访问：192.168.1.9:80
            首先需要关闭防火墙，firewall-cmd --list-ports
            1. 关闭防火墙 systemctl stop firewalld
            2. 开放80端口 firewall-cmd --zone=public --add-port=80/tcp --permanent
                    firewall-cmd --reload
                    firewall-cmd --zone=public --query-port=80/tcp
                    firewall-cmd --zone=public --remove-port=80/tcp --permanent

    配置文件：服务目录，/etc/httpd, 主配置文件，/etc/httpd/conf/httpd.conf
            访问日志，/var/log/httpd/access_log | error_log

            ServerRoot 服务目录
            Listen 监听的IP地址和端口号
            User 运行服务的用户
            Group 运行服务的群组
            DocumentRoot 网站文件
            ...

    自定义网站：echo "Welcome to Imooc" > /var/www/html/index.html
    自定义网站目录：
        mkdir /home/web
        echo "New Web Directory" > /home/web/index.html
        vim /etc/httpd/conf/httpd.conf
        [ 配置后无法获取index.html -> SELinux子系统阻止访问 ]

    SELinux 安全子系统