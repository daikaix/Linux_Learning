1. awk工作模式
    数据处理器，报告生成器
    awk 'BEGIN{} pattern{commands} END{}' file_name

2. awk常见内置变量
    $0: 整行内容
    $1-$n: 当前行的第1-n个字段

    NF: 当前行的字段个数 Number Field
    NR: 当前行的行号 Number Row
        注意：行号一直计数，不分隔，如果使用多个文件不可以
    FNR: 多文件处理，行号单独计数，从0开始  File Number Row

    FS: 输入字段分隔符，不输入默认为空格或者tab键 File Separator
    RS: 输入行分隔符 Row Separator

    OFS: 输出字段分隔符 Output Filed Separator
    ORS: 输出行分隔符 Output Row Separator

    FILENAME: 处理文件的文件名
    ARGC: 命令行参数个数 filename + 1 = 2
    ARGV: 命令行参数数组

3. 格式化输出printf
    %s 打印字符串
    %d 打印十进制数
    %f 打印浮点数
    %x%o%e%c  十六进制，八进制，科学技术，ASCII
    - 左对齐
    + 右对齐
    # 八进制前面加0，十六进制前面加0x, 前面加#

    占位符：
        %20s 右对齐，占位20个符号
        %-20s
        %0.2f

4. 模式匹配方式
    RegExp：
        匹配文件行中含有root的所有行：
        awk 'BEGIN{FS=":"} /root/{print $0}' passwd
        匹配以yarn开头的行：
        awk 'BEGIN{FS=":"} /^yarn/{print $0}' passwd

    关系运算:
        <,>,<=,>=,==,!=
        ~匹配正则表示式，!~ 不匹配正则表达式

        匹配文件第三个字段小于50
        awk 'BEGIN{FS=":"} $3<50{print $0}' passwd
        awk 'BEGIN{FS=":"} $3==1{print $0}' passwd
        字符串比较,正则使用
        awk 'BEGIN{FS=":"} $7=="/bin"{print $0}' passwd
        awk 'BEGIN{FS=":"} $7~/\/bin.*/{print $0}' passwd
        数字3位以上
        awk 'BEGIN{FS=":"} $3~/[0-9]{3,}/{print $0}' passwd
        awk 'BEGIN{FS=":"} $3!~/[0-9]{3,}/{print $0}' passwd

    布尔运算:
        ||,&&,!
        包含hdfs或者yarn
        awk 'BEGIN{FS=":"} $1~/hdfs/ || $1=="yarn"{print $0}' passwd
        第三个字段小于50，第四个字段大于50
        awk 'BEGIN{FS=":"} $3<50 && $4>50{print $0}' passwd