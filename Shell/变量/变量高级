1. 变量替换 [ 测试不要求，可以使用if,else代替 ]
    ${ 变量#匹配规则 }   # 从头开始匹配，最短删除
    ${ 变量##匹配规则 }  # 从头开始匹配，最长删除

    ${ 变量%匹配规则 }   # 从尾开始匹配，最短删除
    ${ 变量%%匹配规则 }  # 从尾开始匹配，最长删除

    ${ 变量/old/new }   # 旧字符串变为新字符串，只替换第一个
    ${ 变量//old/new }  # 旧字符串变为新字符串，全部替换

2. 变量测试 [ 应用不多 ]
    var=${str-expr}
        当str没有声明的话，var取expr, str为空，var取空等等

3. 字符串处理
    计算字符串长度： ${#string}
                  expr length "$string"

    获取子串字符在字符串中的索引位置：
        expr index $string $substring
        注意：只是字符的位置，逐个字符的去找，直接返回最近的结果

    计算子串长度：
        expr match $string substr
        注意：子串必须从头开始匹配，从其他位置无法匹配
        所以，index和match使用较少

    抽取子串：
        ${string:position}          从position开始
        ${string:position:length}   从position开始,匹配长度为length
        ${string: -position}        从右边开始匹配
        ${string:(position)}        从右边开始匹配
        expr substr $position $length
        从position开始，匹配长度为length

        注意：expr 数目减一
             ${} 数目一致

4. 字符处理实例脚本
    变量string="BigData process framework is Hadoop,Hadoop is an open source project"
    执行脚本打印该变量，给出以下选项：
    1. 打印String长度
    2. 删除所有的Hadoop
    3. 替换第一个Hadoop为Mapreduce
    4. 替换所有的Hadoop为Mapreduce

    需求进行功能划分：
        function print_tips
        function len_of_string
        function del_hadoop
        function rep_hadoop_mapreduce_first
        function rep_hadoop_mapreduce_all

    实现：

    主流程的设计：

