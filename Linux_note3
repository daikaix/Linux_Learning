1. 任务的定时和延时执行
    date: 定制date输出，修改系统时间
        date "+%H:%M:%S"
        date "+现在是Y年"

        sudo date 07300918

    at命令： 延时执行一个程序
        at 22:10 -> 会进入输入命令模式，输入Ctrl+D可以退出
        job 1 at Fri Jul 30 21:15:00 2021 [ 任务的编号 1 ]

        在指定时刻执行： at 22:10 tomorrow
                      at 22:10 12/10/21  [ 月，日，年 ]

        在指定间隔后执行程序：at now +10 minute
                          at now +7 weeks

    atq: 列出正等待执行的at任务
    atrm: 删除正等待执行的at任务 atrm 2


crontab:
    sleep: 休息一会
        touch file.txt; sleep 10; rm file.txt
        sleep 15m, sleep 15h

    &&: 前面的命令成功才执行后面的命令
    ||: 前面的命令失败才执行后面的命令
    ; : 一定都执行

    配置nano作为默认的文本编辑器：echo "export EDITOR=nano" >> ~/.bashrc
                             source ~/.bashrc
    crontab: cron实际执行定时程序
        -l:显示crontab文件
        -e:修改crontab文件
            m h dom mon dow command
            m:分钟  h:小时
            dom: day of month mon:month
            dow: day of week [0-6]
            每天的22点10分执行：10 22 * * * touch ~/file.txt
            每个月的1-15： 10 22 1-15 * * command
            每两个小时的整点：0 */2 * * * command
        -r:删除crontab文件


2. Linux的压缩和解压软件
    打包: 将多个文件变成一个总的文件，archive
    压缩: 将大文件变成一个小文件

    使用tar将磁盘文件归档，使用gzip或bzip2压缩归档
    sudo chmod -R dai:dai sorting/

    tar:
        -cvf 创建一个tar归档
        c create,v verbose显示细节,f file 归档为文件
        tar -cvf MyCode.tar MyCode/ file2.txt

        -tf 显示归档的内容，但是不解开归档

        -rvf 追加文件到归档中

        -xvf x extract 将归档解开

    gzip,bzip2
        压缩后的文件：.tar.gz  .tar.bz2
            gzip MyCode.tar
        解压：
            gunzip MyCode.tar.gz
            bunzip2 MyCode.tar.bz2

    同时完成：
        tar -zcvf MyCode.tar MyCode/   归档和压缩，z参数表示使用gzip
        tar -jcvf  使用bzip2压缩归档
        tar -zxvf 解压gzip文件
        tar -jxvf 解压bzip2文件

    zcat: 显示gzip压缩的文件
    bzcat: 显示bzip2压缩的文件

    对于zip和rar的文件：
        zip, zip -r xx.zip xx/  递归压缩子目录中的文件
        unzip, unzip xx.zip

        rar 比较麻烦，需要自己用二进制安装

3. 编译安装软件 yum无法下载软件时
    下载源代码，解压压缩包，配置，编译，安装

    1. 首先尝试获取.rpm安装包，或者.deb安装包
       alien : 将rpm安装包和deb安装包相互转换 (需要安装)
       sudo aline -r xxx.deb

    2. sudo rpm -i xxx.rpm rpm安装软件，不能保证顺利安装

    3. 获取源代码，自行编译[ 将源代码转换成可执行的文件 ],借助README文件
       例如htop软件，官网下载source, 后缀为tar.gz
       tar -zxvf xxx.tar.gz
       进入文件夹：
           运行./config,获取所有依赖 -> missing xxx
           yum install xxx
           编译源码：make Makefile
           安装：sudo make install
       进入/usr/local/bin 获取对应的命令

    获取源代码的另一种方式：rar的安装
        wget [option] [website]  (tget获取磁力链接下载)
        tar -zxvf
        sudo make
        rar a sort.rar sorting/  添加
        unrar e sort.rar

4. 安装CentOS服务器以及基本配置
    安装：
        下载Minimal版本: 7.9.2009/isos/x86_64/Minimal_2009
        通过VirtualBox创建一个虚拟机，并设置存储中的盘片 为CentOS Minimal, 然后启动即可

        窗口大小调整：Virtual Screen 1放大  300%
        选择语言，建立磁盘分区，begin install

        设置root密码：admin, 不创建自己的用户

    网络配置：
        nano /etc/sysconfig/network-scripts/ifconfig-enp0s3
        service network restart


    虚拟机的四种网络连接方式：
        NAT,网络地址转换  -> Guest访问的任何数据都是由主机提供的，Guest在主机上是不存在的
        Bridged Adapter,桥接模式  -> 通过主机网卡，架设了一条桥，获得了自己的ip地址,DHCP分配，完全是一台真实机器
        Internal 内部网络模式
        Host-only Adapter 主机模式

    查看IP信息：
        ifconfig: 比较老，net-tools的命令
        ip addr: 比较新，iproute2的命令
            lo是本地回环的接口，enp0s3是10.0.2.15 内网地址
            poweroff -> 设置，网络，[ 为了获取一个局域网的ip，让其他的终端能够访问 ]，选择桥接网卡
            获取对应的ip地址 192.168.1.13/24

    配置yum源：
        cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
        curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
        yum clean all # 清除系统所有的yum缓存
        yum makecache # 生成yum缓存

5. 获取远程连接
    协议：HTTPS,FTP,电子邮件协议等
    Telnet: 明文传输
    ssh : security shell
        不同的加密算法：
              对称加密，Symmetric-key Encryption,用一个秘钥加密,解密，传输的是message经过加密的密文
                      需要事先传递秘钥
              非对称加密，Asymmetric-key Encryption,用一个秘钥加密，另一个秘钥解密
                        Public key加密，Private key解密，RSA算法
        SSH原理：
            首先使用非对称加密安全传输对称加密的秘钥，之后使用对称加密来传输数据

    情况：
        租用了一台服务器，自动配置好了SSH,而自己的则没有租用服务器
        安装openssh,
            客户端只用来远程连接到别的机器，yum install openssh-clients
            让机器开放SSH服务，安装openssh-server,自动开启sshd守护进程
                sudo systemctl start sshd, stop sshd, restart sshd, status sshd
                设置为开机自启，sudo systemctl enable sshd

        Minium已经默认安装了，ps -ef | grep sshd, systemctl list-unit-files | grep sshd

6. ssh远程连接
    ssh root@192.168.1.14

    使用config配置ssh: 方便管理多个SSH连接
        SSH客户端：/etc/ssh/ssh_config, ~/.shh/config
        SSH服务器端：/etc/ssh/sshd_config

        man sshd_config 查看帮助文档

        客户端参数：
            Host:别名
            HostName:远程主机名
            Port:远程主机端口
            User:用户名
        服务端参数：
            Port:sshd服务器口号，默认为22
            PermitRootLogin: 是否允许以root用户登录
            PasswordAuthentication: 是否允许密码验证登录
            PubkeyAuthentication: 是否允许公钥登录
            PermitEmptyAuthentication: 是否允许空密码登录

    cd .ssh  -> ssh localhost -> known_host
        局部配置文件： .ssh/config, 权限修改为600
        nano config ->
            Host Dai
                HostName 192.168.1.14
                Port 22
                User root
        chmod 600 config
        ssh Dai

    SSH免密登录：
        基于秘钥的验证，客户机生成秘钥对，把公钥上传到服务器登录
        生成秘钥对：ssh-keygen,生成转换秘钥
            默认使用RSA算法，ssh-keygen -t rsa, -t表示指定生成的算法
                指定生成位置，默认在/home/Daikaixuan/.shh/id_rsa中
                如果之前生成过，需要Overwrite
                Enter passphrase: 秘钥加密的密码，空即可
            公钥被生成在id_rsa.pub文件之中，key的指纹是：SHA256:7/CoLXtmUuXDHGCZP8lJzDD3vR0o/76QYp1e47eXZi0 daikaixuan@daikaixuandeMBP.bbrouter
            私钥被生成在id_rsa

        将公钥传输到服务器，ssh-copy-id
            ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.169.1.14
            一个秘钥被添加到了服务器

        此时已经可以免密码登录了
            原理：公钥被追加到~/.ssh/authorized_keys

        如何禁用：
            ssh -o PreferredAu...=password -0 PubKey...=no

